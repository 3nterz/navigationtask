
# File:   tasks.py
# Author: Nathan Tarr

# general information
numTasks = 3

# create the sequence object to customize the tasks and virtual towns
seq = Sequence(3, 4) # task, town

# TASK 1

seq[0].numTowns = 4
seq[0].tasklogname = "task1"
seq[0].task_type = "guided"

seq[0, 0].townName = "Practice Route"
seq[0, 0].practice = True
seq[0, 0].townLayout = [
["N", "N", "N", "N", "N", "N"],
["N", "N", "N", "N", "N", "N"],
["N", "N", "D", "L", "N", "N"],
["S", "N", "N", "ND", "N", "N"]
]
seq[0, 0].route = [
('linear', 0.0, 0.0, 0.0, -0.5, 270.0, 270.0),
('linear', 0.0, -0.5, 0.0, -1.0, 270.0, 270.0),
('linear', 0.0, -1.0, 0.0, -1.0, 270.0, 270.0),
('linear',  0.0, -1.0, 0.0, -1.5, 270.0, 270.0),
('linear', 0.0, -1.5, 0.0, -2.0, 270.0, 250.0),
('linear', 0.0, -2.0, 0.0, -2.5, 250.0, 225.0),
('linear', 0.0, -2.5, 0.0, -2.75, 225.0, 225.0),
('curved', 0.0, -2.75, 0.0, -3.0, 0.25, -3.0, 225.0, 225.0),
('linear', 0.25, -3.0, 0.5, -3.0, 225.0, 225.0),
('linear', 0.5, -3.0, 1.0, -3.0, 225.0, 225.0),
('linear', 1.0, -3.0, 1.5, -3.0, 225.0, 200.0),
('linear', 1.5, -3.0, 2.0, -3.0, 200.0, 180.0),
('linear', 2.0, -3.0, 2.5, -3.0, 180.0, 180.0),
('linear', 2.5, -3.0, 3.0, -3.0, 180.0, 160.0),
('linear', 3.0, -3.0, 3.5, -3.0, 160.0, 140.0),
('linear', 3.5, -3.0, 4.0, -3.0, 140.0, 135.0),
('linear', 4.0, -3.0, 4.5, -3.0, 135.0, 135.0),
('linear', 4.5, -3.0, 4.75, -3.0, 135.0, 135.0),
('curved', 4.75, -3.0, 5.0, -3.0, 5.0, -2.75, 135.0, 135.0),
('linear', 5.0, -2.75, 5.0, -2.5, 135.0, 135.0),
('linear', 5.0, -2.5, 5.0, -2.0, 135.0, 115.0),
('linear', 5.0, -2.0, 5.0, -1.5, 115.0, 95.0),
('linear', 5.0, -1.5, 5.0, -1.0, 95.0, 90.0),
('linear', 5.0, -1.0, 5.0, -1.0, 90.0, 90.0),
('linear', 5.0, -1.0, 5.0, -0.5, 90.0, 90.0),
('linear', 5.0, -0.5, 5.0, 0.0, 90.0, 90.0),
('linear', 5.0, 0.0, 5.0, 0.0, 90.0, 90.0),
('linear', 5.0, 0.0, 5.0, 0.0, 90.0, 90.0)
]

seq[0, 1].townName = "1st Route"
seq[0, 1].excludeLandmarksFrom = ["Practice Route"]
seq[0, 1].townLayout = [
["L", "D", "ND", "N",  "N", "N"],
["N", "N", "N", "N", "N", "N"],
["S", "N", "N", "D", "D", "N"],
["D", "L", "N", "L", "ND", "N"],
["N", "N", "N", "N", "N", "N"], 
["N", "N", "N", "N", "N", "N"], 
["ND", "L", "ND", "N", "N", "N"], 
]
seq[0, 1].route = [
('linear', 0.0, 0.0, 0.0, 0.0, 0.0, 0.0),
('linear', 0.0, 0.0, 0.5, 0.0, 0.0, 0.0),
('linear', 0.5, 0.0, 1.0, 0.0, 0.0, 0.0),
('linear', 1.0, 0.0, 1.0, 0.0, 0.0, 0.0),
('linear', 1.0, 0.0, 1.5, 0.0, 0.0, 0.0),
('linear', 1.5, 0.0, 2.0, 0.0, 0.0, 0.0),
('linear', 2.0, 0.0, 2.0, 0.0, 0.0, 0.0),
('linear', 2.0, 0.0, 2.0, -0.5, 360.0, 337.5),
('linear', 2.0, -0.5, 2.0, -1.0, 337.5, 315.0),
('linear', 2.0, -1.0, 2.0, -1.0, 315.0, 292.5),
('linear', 2.0, -1.0, 2.0, -1.0, 292.5, 270.0),
('linear', 2.0, -1.0, 2.5, -1.0, 270.0, 270.0),
('linear', 2.5, -1.0, 3.0, -1.0, 270.0, 270.0),
('linear', 3.0, -1.0, 3.0, -1.25, 270.0, 247.5),
('linear', 3.0, -1.25, 3.0, -1.5, 247.5, 225.0),
('linear', 3.0, -1.5, 3.0, -1.75, 225.0, 202.5),
('linear', 3.0, -1.75, 3.0, -2.0, 202.5, 180.0),
('linear', 3.0, -2.0, 3.0, -2.0, 180.0, 180.0),
('linear', 3.0, -2.0, 3.5, -2.0, 180.0, 180.0),
('linear', 3.5, -2.0, 4.0, -2.0, 180.0, 180.0),
('linear', 4.0, -2.0, 4.0, -2.0, 180.0, 180.0),
('linear', 4.0, -2.0, 4.5, -2.0, 180.0, 180.0),
('curved', 4.5, -2.0, 5.0, -2.0, 5.0, -1.5, 180.0, 180.0),
('linear', 5.0, -1.5, 5.0, -1.0, 180.0, 180.0),
('linear', 5.0, -1.0, 5.0, -0.5, 180.0, 180.0),
('linear', 5.0, -0.5, 5.0, 0.0, 180.0, 180.0),
('linear', 5.0, 0.0, 5.0, 0.5, 180.0, 180.0),
('linear', 5.0, 0.5, 5.0, 1.0, 180.0, 180.0),
('linear', 5.0, 1.0, 5.0, 1.5, 180.0, 180.0),
('linear', 5.0, 1.5, 5.0, 2.0, 180.0, 157.5),
('linear', 5.0, 2.0, 5.0, 2.5, 157.5, 135.0),
('curved', 5.0, 2.5, 5.0, 3.0, 4.5, 3.0, 135.0, 112.5),
('linear', 4.5, 3.0, 4.0, 3.0, 112.5, 90.0),
('linear', 4.0, 3.0, 4.0, 3.0, 90.0, 90.0),
('linear', 4.0, 3.0, 4.0, 3.0, 90.0, 67.5),
('linear', 4.0, 3.0, 4.0, 3.0, 67.5, 45.0),
('linear', 4.0, 3.0, 4.0, 3.0, 45.0, 22.5),
('linear', 4.0, 3.0, 4.0, 3.0, 22.5, 0.0),
('linear', 4.0, 3.0, 4.0, 3.0, 0.0, 0.0),
('linear', 4.0, 3.0, 3.5, 3.0, 0.0, 0.0),
('linear', 3.5, 3.0, 3.0, 3.0, 0.0, 0.0),
('linear', 3.0, 3.0, 3.0, 3.0, 0.0, 0.0),
('linear', 3.0, 3.0, 2.5, 3.0, 0.0, 0.0),
('linear', 2.5, 3.0, 2.0, 3.0, 0.0, 0.0),
('linear', 2.0, 3.0, 1.5, 3.0, 0.0, 0.0),
('linear', 1.5, 3.0, 1.0, 3.0, 0.0, 0.0),
('linear', 1.0, 3.0, 1.0, 3.0, 0.0, 0.0),
('linear', 1.0, 3.0, 0.5, 3.0, 0.0, 0.0),
('linear', 0.5, 3.0, 0.0, 3.0, 0.0, 0.0),
('linear', 0.0, 3.0, 0.0, 3.0, 0.0, 0.0),
('linear', 0.0, 3.0, 0.0, 3.0, 0.0, 22.5),
('linear', 0.0, 3.0, 0.0, 3.0, 22.5, 45.0),
('linear', 0.0, 3.0, 0.0, 3.0, 45.0, 67.5),
('linear', 0.0, 3.0, 0.0, 3.0, 67.5, 90.0),
('linear', 0.0, 3.0, 0.0, 3.0, 90.0, 112.5),
('linear', 0.0, 3.0, 0.0, 3.0, 112.5, 135.0),
('linear', 0.0, 3.0, 0.0, 3.0, 135.0, 157.5),
('linear', 0.0, 3.0, 0.0, 3.0, 157.5, 180.0),
('linear', 0.0, 3.0, 0.0, 2.5, 180.0, 180.0),
('linear', 0.0, 2.5, 0.0, 2.0, 180.0, 180.0),
('linear', 0.0, 2.0, 0.0, 2.0, 180.0, 180.0),
('linear', 0.0, 2.0, 0.5, 2.0, 180.0, 180.0),
('linear', 0.5, 2.0, 1.0, 2.0, 180.0, 180.0),
('linear', 1.0, 2.0, 1.0, 2.0, 180.0, 180.0),
('linear', 1.0, 2.0, 1.5, 2.0, 180.0, 180.0),
('linear', 1.5, 2.0, 2.0, 2.0, 180.0, 180.0),
('linear', 2.0, 2.0, 2.0, 2.0, 180.0, 180.0),
('linear', 2.0, 2.0, 2.0, 2.0, 180.0, 180.0)
]

seq[0, 2].townName = "2nd Route"
seq[0, 2].excludeLandmarksFrom = ["Practice Route", "1st Route"]
seq[0, 2].townLayout = [
["L", "D", "ND", "N",  "N", "N"],
["N", "N", "N", "N", "N", "N"],
["S", "N", "N", "D", "D", "N"],
["D", "L", "N", "L", "ND", "N"],
["N", "N", "N", "N", "N", "N"], 
["N", "N", "N", "N", "N", "N"], 
["ND", "L", "ND", "N", "N", "N"], 
]
seq[0, 2].route = [
('linear', 0.0, 0.0, 0.0, 0.0, 0.0, 0.0),
('linear', 0.0, 0.0, 0.5, 0.0, 0.0, 0.0),
('linear', 0.5, 0.0, 1.0, 0.0, 0.0, 0.0),
('linear', 1.0, 0.0, 1.0, 0.0, 0.0, 0.0),
('linear', 1.0, 0.0, 1.5, 0.0, 0.0, 0.0),
('linear', 1.5, 0.0, 2.0, 0.0, 0.0, 0.0),
('linear', 2.0, 0.0, 2.0, 0.0, 0.0, 0.0),
('linear', 2.0, 0.0, 2.0, -0.5, 360.0, 337.5),
('linear', 2.0, -0.5, 2.0, -1.0, 337.5, 315.0),
('linear', 2.0, -1.0, 2.0, -1.0, 315.0, 292.5),
('linear', 2.0, -1.0, 2.0, -1.0, 292.5, 270.0),
('linear', 2.0, -1.0, 2.5, -1.0, 270.0, 270.0),
('linear', 2.5, -1.0, 3.0, -1.0, 270.0, 270.0),
('linear', 3.0, -1.0, 3.0, -1.25, 270.0, 247.5),
('linear', 3.0, -1.25, 3.0, -1.5, 247.5, 225.0),
('linear', 3.0, -1.5, 3.0, -1.75, 225.0, 202.5),
('linear', 3.0, -1.75, 3.0, -2.0, 202.5, 180.0),
('linear', 3.0, -2.0, 3.0, -2.0, 180.0, 180.0),
('linear', 3.0, -2.0, 3.5, -2.0, 180.0, 180.0),
('linear', 3.5, -2.0, 4.0, -2.0, 180.0, 180.0),
('linear', 4.0, -2.0, 4.0, -2.0, 180.0, 180.0),
('linear', 4.0, -2.0, 4.5, -2.0, 180.0, 180.0),
('curved', 4.5, -2.0, 5.0, -2.0, 5.0, -1.5, 180.0, 180.0),
('linear', 5.0, -1.5, 5.0, -1.0, 180.0, 180.0),
('linear', 5.0, -1.0, 5.0, -0.5, 180.0, 180.0),
('linear', 5.0, -0.5, 5.0, 0.0, 180.0, 180.0),
('linear', 5.0, 0.0, 5.0, 0.5, 180.0, 180.0),
('linear', 5.0, 0.5, 5.0, 1.0, 180.0, 180.0),
('linear', 5.0, 1.0, 5.0, 1.5, 180.0, 180.0),
('linear', 5.0, 1.5, 5.0, 2.0, 180.0, 157.5),
('linear', 5.0, 2.0, 5.0, 2.5, 157.5, 135.0),
('curved', 5.0, 2.5, 5.0, 3.0, 4.5, 3.0, 135.0, 112.5),
('linear', 4.5, 3.0, 4.0, 3.0, 112.5, 90.0),
('linear', 4.0, 3.0, 4.0, 3.0, 90.0, 90.0),
('linear', 4.0, 3.0, 4.0, 3.0, 90.0, 67.5),
('linear', 4.0, 3.0, 4.0, 3.0, 67.5, 45.0),
('linear', 4.0, 3.0, 4.0, 3.0, 45.0, 22.5),
('linear', 4.0, 3.0, 4.0, 3.0, 22.5, 0.0),
('linear', 4.0, 3.0, 4.0, 3.0, 0.0, 0.0),
('linear', 4.0, 3.0, 3.5, 3.0, 0.0, 0.0),
('linear', 3.5, 3.0, 3.0, 3.0, 0.0, 0.0),
('linear', 3.0, 3.0, 3.0, 3.0, 0.0, 0.0),
('linear', 3.0, 3.0, 2.5, 3.0, 0.0, 0.0),
('linear', 2.5, 3.0, 2.0, 3.0, 0.0, 0.0),
('linear', 2.0, 3.0, 1.5, 3.0, 0.0, 0.0),
('linear', 1.5, 3.0, 1.0, 3.0, 0.0, 0.0),
('linear', 1.0, 3.0, 1.0, 3.0, 0.0, 0.0),
('linear', 1.0, 3.0, 0.5, 3.0, 0.0, 0.0),
('linear', 0.5, 3.0, 0.0, 3.0, 0.0, 0.0),
('linear', 0.0, 3.0, 0.0, 3.0, 0.0, 0.0),
('linear', 0.0, 3.0, 0.0, 3.0, 0.0, 22.5),
('linear', 0.0, 3.0, 0.0, 3.0, 22.5, 45.0),
('linear', 0.0, 3.0, 0.0, 3.0, 45.0, 67.5),
('linear', 0.0, 3.0, 0.0, 3.0, 67.5, 90.0),
('linear', 0.0, 3.0, 0.0, 3.0, 90.0, 112.5),
('linear', 0.0, 3.0, 0.0, 3.0, 112.5, 135.0),
('linear', 0.0, 3.0, 0.0, 3.0, 135.0, 157.5),
('linear', 0.0, 3.0, 0.0, 3.0, 157.5, 180.0),
('linear', 0.0, 3.0, 0.0, 2.5, 180.0, 180.0),
('linear', 0.0, 2.5, 0.0, 2.0, 180.0, 180.0),
('linear', 0.0, 2.0, 0.0, 2.0, 180.0, 180.0),
('linear', 0.0, 2.0, 0.5, 2.0, 180.0, 180.0),
('linear', 0.5, 2.0, 1.0, 2.0, 180.0, 180.0),
('linear', 1.0, 2.0, 1.0, 2.0, 180.0, 180.0),
('linear', 1.0, 2.0, 1.5, 2.0, 180.0, 180.0),
('linear', 1.5, 2.0, 2.0, 2.0, 180.0, 180.0),
('linear', 2.0, 2.0, 2.0, 2.0, 180.0, 180.0),
('linear', 2.0, 2.0, 2.0, 2.0, 180.0, 180.0)
]

seq[0, 3].townName = "3rd Route"
seq[0, 3].excludeLandmarksFrom = ["Practice Route", "1st Route", "2nd Route"]
seq[0, 3].townLayout = [
["L", "D", "ND", "N",  "N", "N"],
["N", "N", "N", "N", "N", "N"],
["S", "N", "N", "D", "D", "N"],
["D", "L", "N", "L", "ND", "N"],
["N", "N", "N", "N", "N", "N"], 
["N", "N", "N", "N", "N", "N"], 
["ND", "L", "ND", "N", "N", "N"], 
]
seq[0, 3].route = [
('linear', 0.0, 0.0, 0.0, 0.0, 0.0, 0.0),
('linear', 0.0, 0.0, 0.5, 0.0, 0.0, 0.0),
('linear', 0.5, 0.0, 1.0, 0.0, 0.0, 0.0),
('linear', 1.0, 0.0, 1.0, 0.0, 0.0, 0.0),
('linear', 1.0, 0.0, 1.5, 0.0, 0.0, 0.0),
('linear', 1.5, 0.0, 2.0, 0.0, 0.0, 0.0),
('linear', 2.0, 0.0, 2.0, 0.0, 0.0, 0.0),
('linear', 2.0, 0.0, 2.0, -0.5, 360.0, 337.5),
('linear', 2.0, -0.5, 2.0, -1.0, 337.5, 315.0),
('linear', 2.0, -1.0, 2.0, -1.0, 315.0, 292.5),
('linear', 2.0, -1.0, 2.0, -1.0, 292.5, 270.0),
('linear', 2.0, -1.0, 2.5, -1.0, 270.0, 270.0),
('linear', 2.5, -1.0, 3.0, -1.0, 270.0, 270.0),
('linear', 3.0, -1.0, 3.0, -1.25, 270.0, 247.5),
('linear', 3.0, -1.25, 3.0, -1.5, 247.5, 225.0),
('linear', 3.0, -1.5, 3.0, -1.75, 225.0, 202.5),
('linear', 3.0, -1.75, 3.0, -2.0, 202.5, 180.0),
('linear', 3.0, -2.0, 3.0, -2.0, 180.0, 180.0),
('linear', 3.0, -2.0, 3.5, -2.0, 180.0, 180.0),
('linear', 3.5, -2.0, 4.0, -2.0, 180.0, 180.0),
('linear', 4.0, -2.0, 4.0, -2.0, 180.0, 180.0),
('linear', 4.0, -2.0, 4.5, -2.0, 180.0, 180.0),
('curved', 4.5, -2.0, 5.0, -2.0, 5.0, -1.5, 180.0, 180.0),
('linear', 5.0, -1.5, 5.0, -1.0, 180.0, 180.0),
('linear', 5.0, -1.0, 5.0, -0.5, 180.0, 180.0),
('linear', 5.0, -0.5, 5.0, 0.0, 180.0, 180.0),
('linear', 5.0, 0.0, 5.0, 0.5, 180.0, 180.0),
('linear', 5.0, 0.5, 5.0, 1.0, 180.0, 180.0),
('linear', 5.0, 1.0, 5.0, 1.5, 180.0, 180.0),
('linear', 5.0, 1.5, 5.0, 2.0, 180.0, 157.5),
('linear', 5.0, 2.0, 5.0, 2.5, 157.5, 135.0),
('curved', 5.0, 2.5, 5.0, 3.0, 4.5, 3.0, 135.0, 112.5),
('linear', 4.5, 3.0, 4.0, 3.0, 112.5, 90.0),
('linear', 4.0, 3.0, 4.0, 3.0, 90.0, 90.0),
('linear', 4.0, 3.0, 4.0, 3.0, 90.0, 67.5),
('linear', 4.0, 3.0, 4.0, 3.0, 67.5, 45.0),
('linear', 4.0, 3.0, 4.0, 3.0, 45.0, 22.5),
('linear', 4.0, 3.0, 4.0, 3.0, 22.5, 0.0),
('linear', 4.0, 3.0, 4.0, 3.0, 0.0, 0.0),
('linear', 4.0, 3.0, 3.5, 3.0, 0.0, 0.0),
('linear', 3.5, 3.0, 3.0, 3.0, 0.0, 0.0),
('linear', 3.0, 3.0, 3.0, 3.0, 0.0, 0.0),
('linear', 3.0, 3.0, 2.5, 3.0, 0.0, 0.0),
('linear', 2.5, 3.0, 2.0, 3.0, 0.0, 0.0),
('linear', 2.0, 3.0, 1.5, 3.0, 0.0, 0.0),
('linear', 1.5, 3.0, 1.0, 3.0, 0.0, 0.0),
('linear', 1.0, 3.0, 1.0, 3.0, 0.0, 0.0),
('linear', 1.0, 3.0, 0.5, 3.0, 0.0, 0.0),
('linear', 0.5, 3.0, 0.0, 3.0, 0.0, 0.0),
('linear', 0.0, 3.0, 0.0, 3.0, 0.0, 0.0),
('linear', 0.0, 3.0, 0.0, 3.0, 0.0, 22.5),
('linear', 0.0, 3.0, 0.0, 3.0, 22.5, 45.0),
('linear', 0.0, 3.0, 0.0, 3.0, 45.0, 67.5),
('linear', 0.0, 3.0, 0.0, 3.0, 67.5, 90.0),
('linear', 0.0, 3.0, 0.0, 3.0, 90.0, 112.5),
('linear', 0.0, 3.0, 0.0, 3.0, 112.5, 135.0),
('linear', 0.0, 3.0, 0.0, 3.0, 135.0, 157.5),
('linear', 0.0, 3.0, 0.0, 3.0, 157.5, 180.0),
('linear', 0.0, 3.0, 0.0, 2.5, 180.0, 180.0),
('linear', 0.0, 2.5, 0.0, 2.0, 180.0, 180.0),
('linear', 0.0, 2.0, 0.0, 2.0, 180.0, 180.0),
('linear', 0.0, 2.0, 0.5, 2.0, 180.0, 180.0),
('linear', 0.5, 2.0, 1.0, 2.0, 180.0, 180.0),
('linear', 1.0, 2.0, 1.0, 2.0, 180.0, 180.0),
('linear', 1.0, 2.0, 1.5, 2.0, 180.0, 180.0),
('linear', 1.5, 2.0, 2.0, 2.0, 180.0, 180.0),
('linear', 2.0, 2.0, 2.0, 2.0, 180.0, 180.0),
('linear', 2.0, 2.0, 2.0, 2.0, 180.0, 180.0)
]

# TASK 2
seq[1].numTowns = 1
seq[1].tasklogname = "task2"
seq[1].task_type = "navigate"

seq[1, 0].townName = "Pleasant Town"
seq[1, 0].excludeLandmarksFrom = ["Practice Route", "1st Route", "2nd Route", "3rd Route"]

# TASK 3
seq[2].numTowns = 1
seq[2].tasklogname = "task3"
seq[2].task_type = "search"

seq[2, 0].townName = "Sky City"
seq[2, 0].excludeLandmarksFrom = ["Practice Route", "1st Route", "2nd Route", "3rd Route", "Pleasant Town"]
seq[2, 0].townLayout = [
["L", "D", "ND", "N",  "D", "L", "N", "N", "N", "N", "N", "N"],
["N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N"],
["N", "ND", "N", "D", "D", "N", "N", "N", "N", "N", "N", "N"],
["D", "L", "N", "L", "ND", "N", "N", "N", "N", "N", "N", "N"],
["ND", "D", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N"],
["N", "N", "N", "S", "N", "ND", "N", "N", "N", "N", "N", "N"],
["N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N"],
["N", "ND", "N", "D", "D", "N", "N", "N", "N", "N", "N", "N"],
["D", "L", "N", "L", "ND", "N", "N", "N", "N", "N", "N", "N"],
["ND", "D", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N"],
["N", "N", "N", "S", "N", "ND", "N", "N", "N", "N", "N", "N"],
["N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N"],
["N", "ND", "N", "D", "D", "N", "N", "N", "N", "N", "N", "N"],
["D", "L", "N", "L", "ND", "N", "N", "N", "N", "N", "N", "N"],
["ND", "D", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N"],
["N", "N", "N", "S", "N", "ND", "N", "N", "N", "N", "N", "N"],
["N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N"],
["N", "ND", "N", "D", "D", "N", "N", "N", "N", "N", "N", "N"],
["D", "L", "N", "L", "ND", "N", "N", "N", "N", "N", "N", "N"],
["ND", "D", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N"],
["N", "N", "N", "S", "N", "ND", "N", "N", "N", "N", "N", "N"],
["N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N"],
["N", "ND", "N", "D", "D", "N", "N", "N", "N", "N", "N", "N"],
["D", "L", "N", "L", "ND", "N", "N", "N", "N", "N", "N", "N"],
["ND", "D", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N"],
["N", "N", "N", "S", "N", "ND", "N", "N", "N", "N", "N", "N"],
["N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N"],
["N", "ND", "N", "D", "D", "N", "N", "N", "N", "N", "N", "N"],
["D", "L", "N", "L", "ND", "N", "N", "N", "N", "N", "N", "N"],
["ND", "D", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N"],
["N", "N", "N", "S", "N", "ND", "N", "N", "N", "N", "N", "N"],
["N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N"],
["N", "ND", "N", "D", "D", "N", "N", "N", "N", "N", "N", "N"],
["D", "L", "N", "L", "ND", "N", "N", "N", "N", "N", "N", "N"],
["ND", "D", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N"],
["N", "N", "N", "S", "N", "ND", "N", "N", "N", "N", "N", "N"],
["N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N"],
["N", "ND", "N", "D", "D", "N", "N", "N", "N", "N", "N", "N"],
["D", "L", "N", "L", "ND", "N", "N", "N", "N", "N", "N", "N"],
["ND", "D", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N"],
["N", "N", "N", "S", "N", "ND", "N", "N", "N", "N", "N", "N"],
["N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N"],
["N", "ND", "N", "D", "D", "N", "N", "N", "N", "N", "N", "N"],
["D", "L", "N", "L", "ND", "N", "N", "N", "N", "N", "N", "N"],
["ND", "D", "N", "N", "N", "N", "N", "N", "N", "N", "N", "N"],
["N", "N", "N", "S", "N", "ND", "N", "N", "N", "N", "N", "N"],
["ND", "L", "ND", "L", "N", "ND", "N", "N", "N", "N", "N", "N"]
]

